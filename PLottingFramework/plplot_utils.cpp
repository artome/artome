#include "plplot_utils.h"
#include <cstring>
#include <QStringList>
Plplot_utils::Plplot_utils()
{

}

int Plplot_utils::getMarker(int i)
{

  if(i>10) return 140;
  PLINT markerscode[11];
  markerscode[0]=140;markerscode[1]=142;markerscode[2]=141;markerscode[3]=145;markerscode[4]=146;markerscode[5]= 148;
  markerscode[6]=149;markerscode[7]=137;markerscode[8]=136;markerscode[9]=172;markerscode[10]=138;

 return markerscode[i];

}
void Plplot_utils::rgbfromhex(int *r,int *g,int *b,const char *hex)
{
    char color[5];
    strcpy(color,"0x00");
    color[2]=hex[0];
    color[3]=hex[1];
    *r=strtol(color,NULL,16);
    color[2]=hex[2];
    color[3]=hex[3];
    *g=strtol(color,NULL,16);
    color[2]=hex[4];
    color[3]=hex[5];
    *b=strtol(color,NULL,16);


}
void Plplot_utils::setcolormap0(int n,int *red,int *green,int *blue,PLFLT *a,plstream *pls)
{
    pls->scmap0a(red,green,blue,a,n);
}
int Plplot_utils::Testcolormap(int w, int h, QString filename, QString palete,int ncol)
{
    plstream *pls;
    pls = new plstream();;
    pls->sdev("pngqt");
    pls->sfnam(filename.toLatin1().constData());
    int r,b,g;
    rgbfromhex(&r,&g,&b,"DDDDDD");
    pls->scolbga(r,g,b,0);
    pls->spage(0.,0.,w,h,0,0);
    pls->fontld (0);
    pls->init();
    pls->font(1);//default 1 ,2 Ã© roman"
    pls->adv(0);
    pls->schr(0.,2);//character height

   Setcolormap(palete,ncol,pls);
   if(palete.contains("rainbow_cloud")) ncol=270;
   PLFLT x[4],y[4];
   pls->vpor(.05,.95,0.01,.99);
   pls->wind(0.,1.,0.,1. );
   y[0]=0.;
   y[1]=1.;
   y[3]=y[0];
   y[2]=y[1];
   for (int k = 0; k < ncol; k++) {
       x[0] =  k * 1. / (ncol);
       x[1] = x[0];
       x[2] =  (k + 1) * 1./ (ncol);
       x[3] = x[2];
       pls->col1((k / (float)ncol) + 1. / (2. * (ncol)));
       pls->fill(4, x, y);
   }

  pls->col0(1);
//  plbox("bctv", 0., 0, "bcv", 0., 0);
   delete pls;

  return 0;
}
int  Plplot_utils::Setcolormap(QString palete,int n,plstream *pls)
{
PLINT *r,*g,*b;

r=(PLINT*)malloc(n*sizeof(PLINT));
g=(PLINT*)malloc(n*sizeof(PLINT));
b=(PLINT*)malloc(n*sizeof(PLINT));


if(palete.contains("BluetoOrange")){

switch(n){
case 14:
r[0]=5;g[0]=90;b[0]=255;r[1]=50;g[1]=118;b[1]=255;r[2]=89;g[2]=144;b[2]=255;r[3]=140;g[3]=178;b[3]=255;r[4]=191;g[4]=212;b[4]=255;
r[5]=229;g[5]=238;b[5]=255;r[6]=247;g[6]=249;b[6]=255;r[7]=255;g[7]=255;b[7]=204;r[8]=255;g[8]=255;b[8]=153;r[9]=255;g[9]=255;b[9]=0;
r[10]=255;g[10]=204;b[10]=0;r[11]=255;g[11]=153;b[11]=0;r[12]=255;g[12]=102;b[12]=0;r[13]=255;g[13]=0;b[13]=0;
break;
case 8:
r[0]=0;g[0]=127;b[0]=255;r[1]=76;g[1]=195;b[1]=255;r[2]=153;g[2]=237;b[2]=255;r[3]=204;g[3]=255;b[3]=255;r[4]=255;g[4]=255;b[4]=204;
r[5]=255;g[5]=238;b[5]=153;r[6]=255;g[6]=195;b[6]=76;r[7]=255;g[7]=127;b[7]=0;
break;
}//endswitch(ncols)
}else if(palete.contains("vitoria"))
{
r[0]=0;g[0]=0;b[0]=205;r[1]=0;g[1]=0;b[1]=205;r[2]=0;g[2]=0;b[2]=205;r[3]=0;g[3]=0;b[3]=205;r[4]=0;g[4]=0;b[4]=205;
r[5]=0;g[5]=0;b[5]=205;r[6]=0;g[6]=0;b[6]=205;r[7]=0;g[7]=0;b[7]=205;r[8]=0;g[8]=80;b[8]=255;r[9]=0;g[9]=80;b[9]=255;
r[10]=0;g[10]=80;b[10]=255;r[11]=0;g[11]=80;b[11]=255;r[12]=0;g[12]=80;b[12]=255;r[13]=0;g[13]=80;b[13]=255;r[14]=0;g[14]=80;b[14]=255;
r[15]=0;g[15]=80;b[15]=255;r[16]=0;g[16]=240;b[16]=110;r[17]=90;g[17]=255;b[17]=30;r[18]=255;g[18]=255;b[18]=0;r[19]=255;g[19]=255;b[19]=0;
r[20]=255;g[20]=170;b[20]=0;r[21]=255;g[21]=85;b[21]=0;r[22]=255;g[22]=0;b[22]=0;r[23]=170;g[23]=0;b[23]=0;
}else if(palete.contains("jet"))
{
r[0]=0;g[0]=0;b[0]=191;r[1]=0;g[1]=0;b[1]=255;r[2]=0;g[2]=63;b[2]=255;r[3]=0;g[3]=127;b[3]=255;r[4]=0;g[4]=191;b[4]=255;
r[5]=0;g[5]=255;b[5]=255;r[6]=63;g[6]=255;b[6]=255;r[7]=127;g[7]=255;b[7]=191;r[8]=191;g[8]=255;b[8]=127;r[9]=255;g[9]=255;b[9]=63;
r[10]=255;g[10]=255;b[10]=0;r[11]=255;g[11]=191;b[11]=0;r[12]=255;g[12]=127;b[12]=0;r[13]=255;g[13]=63;b[13]=0;r[14]=255;g[14]=0;b[14]=0;r[15]=191;g[15]=0;b[15]=0;
}else if(palete.contains("nogreen"))
{
r[0]=32;g[0]=96;b[0]=255;r[1]=32;g[1]=159;b[1]=255;r[2]=32;g[2]=191;b[2]=255;r[3]=0;g[3]=207;b[3]=255;r[4]=42;g[4]=255;b[4]=255;
r[5]=85;g[5]=255;b[5]=255;r[6]=127;g[6]=255;b[6]=255;r[7]=170;g[7]=255;b[7]=255;r[8]=255;g[8]=255;b[8]=84;r[9]=255;g[9]=240;b[9]=0;
r[10]=255;g[10]=191;b[10]=0;r[11]=255;g[11]=168;b[11]=0;r[12]=255;g[12]=138;b[12]=0;r[13]=255;g[13]=112;b[13]=0;r[14]=255;g[14]=77;b[14]=0;r[15]=255;g[15]=0;b[15]=0;

}else if(palete.contains("wysiwyg")){
    switch(n){
case 14:
r[0]=64; g[0]=0;b[0]=64; r[1]=0; g[1]=64; b[1]=255; r[2]=0; g[2]=128; b[2]=255; r[3]=0;g[3]=160; b[3]=255; r[4]=64; g[4]=224; b[4]=255; r[5]=64; g[5]=255; b[5]=255;
r[6]=64; g[6]=255; b[6]=64; r[7]=128; g[7]=255; b[7]=64; r[8]=255; g[8]=255;b[8]=64; r[9]=255; g[9]=224; b[9]=64; r[10]=255; g[10]=96; b[10]=64; r[11]=255;
g[11]=32; b[11]=64; r[12]=255; g[12]=96; b[12]=192; r[13]=255; g[13]=224;b[13]=246;
        break;

case 8:

r[0]=64; g[0]=0; b[0]=192; r[1]=0; g[1]=128; b[1]=255; r[2]=64; g[2]=224;b[2]=255; r[3]=64; g[3]=255; b[3]=192; r[4]=192; g[4]=255; b[4]=64; r[5]=255;
g[5]=224; b[5]=64; r[6]=255; g[6]=32; b[6]=64; r[7]=255; g[7]=160; b[7]=255;
break;
}
}else if(palete=="gray"){
    switch(n){
case 6:
r[0]=21; g[0]=21; b[0]=21; r[1]=64; g[1]=64; b[1]=64; r[2]=106; g[2]=106; b[2]=106; r[3]=149; g[3]=149; b[3]=149;r[4]=191; g[4]=191; b[4]=191; r[5]=234; g[5]=234; b[5]=234;
        break;

case 8:
r[0]=16; g[0]=16; b[0]=16; r[1]=48; g[1]=48; b[1]=48; r[2]=80; g[2]=80;b[2]=80; r[3]=112; g[3]=112; b[3]=112; r[4]=143; g[4]=143; b[4]=143; r[5]=175;
g[5]=175; b[5]=175; r[6]=207; g[6]=207; b[6]=207; r[7]=239; g[7]=239; b[7]=239;

break;

case 9:
r[0]=14; g[0]=14; b[0]=14; r[1]=42; g[1]=42; b[1]=42; r[2]=71; g[2]=71;b[2]=71; r[3]=99; g[3]=99; b[3]=99; r[4]=128; g[4]=128; b[4]=128; r[5]=156;
g[5]=156; b[5]=156; r[6]=184; g[6]=184; b[6]=184; r[7]=212; g[7]=212; b[7]=212;r[8]=241; g[8]=241; b[8]=241;
        break;

case 10:
r[0]=13; g[0]=13; b[0]=13; r[1]=38; g[1]=38; b[1]=38; r[2]=64; g[2]=64; b[2]=64; r[3]=89; g[3]=89; b[3]=89; r[4]=115; g[4]=115; b[4]=115; r[5]=140;
g[5]=140; b[5]=140; r[6]=166; g[6]=166; b[6]=166; r[7]=191; g[7]=191; b[7]=191;r[8]=217; g[8]=217; b[8]=217; r[9]=242; g[9]=242; b[9]=242;
        break;

case 11: r[0]=12; g[0]=12; b[0]=12; r[1]=35; g[1]=35; b[1]=35; r[2]=58; g[2]=58; b[2]=58; r[3]=81; g[3]=81; b[3]=81; r[4]=104; g[4]=104; b[4]=104; r[5]=128;
g[5]=128; b[5]=128; r[6]=151; g[6]=151; b[6]=151; r[7]=174; g[7]=174; b[7]=174;r[8]=197; g[8]=197; b[8]=197; r[9]=220; g[9]=220; b[9]=220; r[10]=243;
g[10]=243; b[10]=243;
        break;

case 12:
r[0]=11; g[0]=11; b[0]=11; r[1]=32; g[1]=32; b[1]=32; r[2]=53; g[2]=53;b[2]=53; r[3]=74; g[3]=74; b[3]=74; r[4]=96; g[4]=96; b[4]=96; r[5]=117;
g[5]=117; b[5]=117; r[6]=138; g[6]=138; b[6]=138; r[7]=159; g[7]=159; b[7]=159;r[8]=181; g[8]=181; b[8]=181; r[9]=202; g[9]=202; b[9]=202; r[10]=223;
g[10]=223; b[10]=223; r[11]=244; g[11]=244; b[11]=244;

break;
}
}else if(palete.contains("rainbow")){
    switch(n){
case 6:
r[0]=148; g[0]=0;b[0]=255; r[1]=0; g[1]=63; b[1]=255; r[2]=0; g[2]=255; b[2]=233; r[3]=0;g[3]=255; b[3]=21; r[4]=191; g[4]=255; b[4]=0; r[5]=255; g[5]=106; b[5]=0;
break;

case 8:
r[0]=175; g[0]=0; b[0]=255; r[1]=16; g[1]=0; b[1]=255; r[2]=0; g[2]=143;b[2]=255; r[3]=0; g[3]=255; b[3]=207; r[4]=0; g[4]=255; b[4]=47; r[5]=111;
g[5]=255; b[5]=0; r[6]=255; g[6]=239; b[6]=0; r[7]=255; g[7]=79; b[7]=0;

break;

case 9:
r[0]=184; g[0]=0; b[0]=255; r[1]=42; g[1]=0; b[1]=255; r[2]=0; g[2]=99;b[2]=255; r[3]=0; g[3]=240; b[3]=255; r[4]=0; g[4]=255; b[4]=127; r[5]=14;
g[5]=255; b[5]=0; r[6]=155; g[6]=255; b[6]=0; r[7]=255; g[7]=212; b[7]=0;r[8]=255; g[8]=70; b[8]=0;

break;

case 10: r[0]=191; g[0]=0; b[0]=255; r[1]=63; g[1]=0; b[1]=255; r[2]=0; g[2]=63;b[2]=255; r[3]=0; g[3]=191; b[3]=255; r[4]=0; g[4]=255; b[4]=191; r[5]=0;
g[5]=255; b[5]=63; r[6]=63; g[6]=255; b[6]=0; r[7]=191; g[7]=255; b[7]=0;r[8]=255; g[8]=191; b[8]=0; r[9]=255; g[9]=63; b[9]=0;

break;

case 11:
r[0]=197; g[0]=0; b[0]=255; r[1]=81; g[1]=0; b[1]=255; r[2]=0; g[2]=34;b[2]=255; r[3]=0; g[3]=150; b[3]=255; r[4]=0; g[4]=255; b[4]=243; r[5]=0;
g[5]=255; b[5]=127; r[6]=0; g[6]=255; b[6]=11; r[7]=104; g[7]=255; b[7]=0;r[8]=220; g[8]=255; b[8]=0; r[9]=255; g[9]=173; b[9]=0; r[10]=255; g[10]=58;b[10]=0;

break;

case 12:
r[0]=201; g[0]=0; b[0]=255; r[1]=95; g[1]=0; b[1]=255; r[2]=0; g[2]=10;b[2]=255; r[3]=0; g[3]=116; b[3]=255; r[4]=0; g[4]=223; b[4]=255; r[5]=0;
g[5]=255; b[5]=180; r[6]=0; g[6]=255; b[6]=74; r[7]=31; g[7]=255; b[7]=0;r[8]=138; g[8]=255; b[8]=0; r[9]=244; g[9]=255; b[9]=0; r[10]=255; g[10]=159;
b[10]=0; r[11]=255; g[11]=53; b[11]=0;

break;

case 13:
r[0]=206; g[0]=0; b[0]=255; r[1]=107; g[1]=0; b[1]=255; r[2]=9; g[2]=0;b[2]=255; r[3]=0; g[3]=88; b[3]=255; r[4]=0; g[4]=186; b[4]=255; r[5]=0;
g[5]=255; b[5]=225; r[6]=0; g[6]=255; b[6]=127; r[7]=0; g[7]=255; b[7]=29;r[8]=68; g[8]=255; b[8]=0; r[9]=166; g[9]=255; b[9]=0; r[10]=255; g[10]=245;
b[10]=0; r[11]=255; g[11]=147; b[11]=0; r[12]=255; g[12]=49; b[12]=0;
break;

case 14:
r[0]=209; g[0]=0; b[0]=255; r[1]=118; g[1]=0; b[1]=255; r[2]=27;g[2]=0; b[2]=255; r[3]=0; g[3]=63; b[3]=255; r[4]=0; g[4]=154; b[4]=255;
r[5]=0; g[5]=245; b[5]=255; r[6]=0; g[6]=255; b[6]=173; r[7]=0; g[7]=255;b[7]=82; r[8]=9; g[8]=255; b[8]=0; r[9]=100; g[9]=255; b[9]=0; r[10]=191;
g[10]=255; b[10]=0; r[11]=255; g[11]=227; b[11]=0; r[12]=255; g[12]=136;b[12]=0; r[13]=255; g[13]=45; b[13]=0;

break;

case 15:
r[0]=212; g[0]=0; b[0]=255; r[1]=127; g[1]=0; b[1]=255; r[2]=42;g[2]=0; b[2]=255; r[3]=0; g[3]=42; b[3]=255; r[4]=0; g[4]=127; b[4]=255;
r[5]=0; g[5]=212; b[5]=255; r[6]=0; g[6]=255; b[6]=212; r[7]=0; g[7]=255;b[7]=127; r[8]=0; g[8]=255; b[8]=42; r[9]=42; g[9]=255; b[9]=0; r[10]=127;
g[10]=255; b[10]=0; r[11]=212; g[11]=255; b[11]=0; r[12]=255; g[12]=212;b[12]=0; r[13]=255; g[13]=127; b[13]=0; r[14]=255; g[14]=42; b[14]=0;

break;

case 16:
r[0]=215; g[0]=0; b[0]=255; r[1]=135; g[1]=0; b[1]=255; r[2]=55;g[2]=0; b[2]=255; r[3]=0; g[3]=24; b[3]=255; r[4]=0; g[4]=103; b[4]=255;
r[5]=0; g[5]=183; b[5]=255; r[6]=0; g[6]=255; b[6]=247; r[7]=0; g[7]=255;b[7]=167; r[8]=0; g[8]=255; b[8]=87; r[9]=0; g[9]=255; b[9]=8; r[10]=71;
g[10]=255; b[10]=0; r[11]=151; g[11]=255; b[11]=0; r[12]=231; g[12]=255;b[12]=0; r[13]=255; g[13]=199; b[13]=0; r[14]=255; g[14]=119; b[14]=0;
r[15]=255; g[15]=39; b[15]=0;

break;

case 300:

r[0]=252;g[0]=0;b[0]=255; r[1]=248;g[1]=0;b[1]=255; r[2]=244;g[2]=0;b[2]=255;r[3]=240;g[3]=0;b[3]=255; r[4]=235;g[4]=0;b[4]=255; r[5]=231;g[5]=0;b[5]=255;
r[6]=227;g[6]=0;b[6]=255; r[7]=223;g[7]=0;b[7]=255; r[8]=218;g[8]=0;b[8]=255;r[9]=214;g[9]=0;b[9]=255; r[10]=210;g[10]=0;b[10]=255;
r[11]=206;g[11]=0;b[11]=255; r[12]=201;g[12]=0;b[12]=255;r[13]=197;g[13]=0;b[13]=255; r[14]=193;g[14]=0;b[14]=255;
r[15]=189;g[15]=0;b[15]=255; r[16]=184;g[16]=0;b[16]=255;r[17]=180;g[17]=0;b[17]=255; r[18]=176;g[18]=0;b[18]=255;
r[19]=172;g[19]=0;b[19]=255; r[20]=167;g[20]=0;b[20]=255;r[21]=163;g[21]=0;b[21]=255; r[22]=159;g[22]=0;b[22]=255;
r[23]=155;g[23]=0;b[23]=255; r[24]=150;g[24]=0;b[24]=255;r[25]=146;g[25]=0;b[25]=255; r[26]=142;g[26]=0;b[26]=255;
r[27]=138;g[27]=0;b[27]=255; r[28]=133;g[28]=0;b[28]=255;r[29]=129;g[29]=0;b[29]=255; r[30]=125; g[30]=0; b[30]=255; r[31]=121; g[31]=0;
b[31]=255; r[32]=116; g[32]=0; b[32]=255; r[33]=112; g[33]=0; b[33]=255;r[34]=108; g[34]=0; b[34]=255; r[35]=104; g[35]=0; b[35]=255; r[36]=99;
g[36]=0; b[36]=255; r[37]=95; g[37]=0; b[37]=255; r[38]=91; g[38]=0; b[38]=255;r[39]=87; g[39]=0; b[39]=255; r[40]=82; g[40]=0; b[40]=255; r[41]=78; g[41]=0;
b[41]=255; r[42]=74; g[42]=0; b[42]=255; r[43]=70; g[43]=0; b[43]=255;r[44]=65; g[44]=0; b[44]=255; r[45]=61; g[45]=0; b[45]=255; r[46]=57; g[46]=0;
b[46]=255; r[47]=53; g[47]=0; b[47]=255; r[48]=48; g[48]=0; b[48]=255;r[49]=44; g[49]=0; b[49]=255; r[50]=40; g[50]=0; b[50]=255; r[51]=36; g[51]=0;
b[51]=255; r[52]=31; g[52]=0; b[52]=255; r[53]=27; g[53]=0; b[53]=255;r[54]=23; g[54]=0; b[54]=255; r[55]=19; g[55]=0; b[55]=255; r[56]=14; g[56]=0;
b[56]=255; r[57]=10; g[57]=0; b[57]=255; r[58]=6; g[58]=0; b[58]=255; r[59]=2;g[59]=0; b[59]=255; r[60]=0; g[60]=2; b[60]=255; r[61]=0; g[61]=6; b[61]=255;
r[62]=0; g[62]=10; b[62]=255; r[63]=0; g[63]=14; b[63]=255; r[64]=0; g[64]=19;b[64]=255; r[65]=0; g[65]=23; b[65]=255; r[66]=0; g[66]=27; b[66]=255; r[67]=0;
g[67]=31; b[67]=255; r[68]=0; g[68]=36; b[68]=255; r[69]=0; g[69]=40;b[69]=255; r[70]=0; g[70]=44; b[70]=255; r[71]=0; g[71]=48; b[71]=255; r[72]=0;
g[72]=53; b[72]=255; r[73]=0; g[73]=57; b[73]=255; r[74]=0; g[74]=61;b[74]=255; r[75]=0; g[75]=65; b[75]=255; r[76]=0; g[76]=70; b[76]=255; r[77]=0;
g[77]=74; b[77]=255; r[78]=0; g[78]=78; b[78]=255; r[79]=0; g[79]=82;b[79]=255; r[80]=0; g[80]=87; b[80]=255; r[81]=0; g[81]=91; b[81]=255; r[82]=0;
g[82]=95; b[82]=255; r[83]=0; g[83]=99; b[83]=255; r[84]=0; g[84]=104;b[84]=255; r[85]=0; g[85]=108; b[85]=255; r[86]=0; g[86]=112; b[86]=255;
r[87]=0; g[87]=116; b[87]=255; r[88]=0; g[88]=121; b[88]=255; r[89]=0;g[89]=125; b[89]=255; r[90]=0; g[90]=129; b[90]=255; r[91]=0; g[91]=133;
b[91]=255; r[92]=0; g[92]=138; b[92]=255; r[93]=0; g[93]=142; b[93]=255;r[94]=0; g[94]=146; b[94]=255; r[95]=0; g[95]=150; b[95]=255; r[96]=0;
g[96]=155; b[96]=255; r[97]=0; g[97]=159; b[97]=255; r[98]=0; g[98]=163;b[98]=255; r[99]=0; g[99]=167; b[99]=255; r[100]=0; g[100]=172; b[100]=255;
r[101]=0; g[101]=176; b[101]=255; r[102]=0; g[102]=180; b[102]=255; r[103]=0;g[103]=184; b[103]=255; r[104]=0; g[104]=189; b[104]=255; r[105]=0; g[105]=193;
b[105]=255; r[106]=0; g[106]=197; b[106]=255; r[107]=0; g[107]=201; b[107]=255;r[108]=0; g[108]=206; b[108]=255; r[109]=0; g[109]=210; b[109]=255; r[110]=0;
g[110]=214; b[110]=255; r[111]=0; g[111]=218; b[111]=255; r[112]=0; g[112]=223;b[112]=255; r[113]=0; g[113]=227; b[113]=255; r[114]=0; g[114]=231; b[114]=255;
r[115]=0; g[115]=235; b[115]=255; r[116]=0; g[116]=240; b[116]=255; r[117]=0;g[117]=244; b[117]=255; r[118]=0; g[118]=248; b[118]=255; r[119]=0; g[119]=252;
b[119]=255; r[120]=0; g[120]=255; b[120]=252; r[121]=0; g[121]=255; b[121]=248;r[122]=0; g[122]=255; b[122]=244; r[123]=0; g[123]=255; b[123]=240; r[124]=0;
g[124]=255; b[124]=235; r[125]=0; g[125]=255; b[125]=231; r[126]=0; g[126]=255;b[126]=227; r[127]=0; g[127]=255; b[127]=223; r[128]=0; g[128]=255; b[128]=218;
r[129]=0; g[129]=255; b[129]=214; r[130]=0; g[130]=255; b[130]=210; r[131]=0;g[131]=255; b[131]=206; r[132]=0; g[132]=255; b[132]=201; r[133]=0; g[133]=255;
b[133]=197; r[134]=0; g[134]=255; b[134]=193; r[135]=0; g[135]=255; b[135]=189;r[136]=0; g[136]=255; b[136]=184; r[137]=0; g[137]=255; b[137]=180; r[138]=0;
g[138]=255; b[138]=176; r[139]=0; g[139]=255; b[139]=172; r[140]=0; g[140]=255;b[140]=167; r[141]=0; g[141]=255; b[141]=163; r[142]=0; g[142]=255; b[142]=159;
r[143]=0; g[143]=255; b[143]=155; r[144]=0; g[144]=255; b[144]=150; r[145]=0;g[145]=255; b[145]=146; r[146]=0; g[146]=255; b[146]=142; r[147]=0; g[147]=255;
b[147]=138; r[148]=0; g[148]=255; b[148]=133; r[149]=0; g[149]=255; b[149]=129;r[150]=0; g[150]=255; b[150]=125; r[151]=0; g[151]=255; b[151]=121; r[152]=0;
g[152]=255; b[152]=116; r[153]=0; g[153]=255; b[153]=112; r[154]=0; g[154]=255;b[154]=108; r[155]=0; g[155]=255; b[155]=104; r[156]=0; g[156]=255; b[156]=99;
r[157]=0; g[157]=255; b[157]=95; r[158]=0; g[158]=255; b[158]=91; r[159]=0;g[159]=255; b[159]=87; r[160]=0; g[160]=255; b[160]=82; r[161]=0; g[161]=255;
b[161]=78; r[162]=0; g[162]=255; b[162]=74; r[163]=0; g[163]=255; b[163]=70;r[164]=0; g[164]=255; b[164]=65; r[165]=0; g[165]=255; b[165]=61; r[166]=0;
g[166]=255; b[166]=57; r[167]=0; g[167]=255; b[167]=53; r[168]=0; g[168]=255;b[168]=48; r[169]=0; g[169]=255; b[169]=44; r[170]=0; g[170]=255; b[170]=40;
r[171]=0; g[171]=255; b[171]=36; r[172]=0; g[172]=255; b[172]=31; r[173]=0;g[173]=255; b[173]=27; r[174]=0; g[174]=255; b[174]=23; r[175]=0; g[175]=255;
b[175]=19; r[176]=0; g[176]=255; b[176]=14; r[177]=0; g[177]=255; b[177]=10;r[178]=0; g[178]=255; b[178]=6; r[179]=0; g[179]=255; b[179]=2; r[180]=2;
g[180]=255; b[180]=0; r[181]=6; g[181]=255; b[181]=0; r[182]=10; g[182]=255;b[182]=0; r[183]=14; g[183]=255; b[183]=0; r[184]=19; g[184]=255; b[184]=0;
r[185]=23; g[185]=255; b[185]=0; r[186]=27; g[186]=255; b[186]=0; r[187]=31;g[187]=255; b[187]=0; r[188]=36; g[188]=255; b[188]=0; r[189]=40; g[189]=255;
b[189]=0; r[190]=44; g[190]=255; b[190]=0; r[191]=48; g[191]=255; b[191]=0;r[192]=53; g[192]=255; b[192]=0; r[193]=57; g[193]=255; b[193]=0; r[194]=61;
g[194]=255; b[194]=0; r[195]=65; g[195]=255; b[195]=0; r[196]=70; g[196]=255;b[196]=0; r[197]=74; g[197]=255; b[197]=0; r[198]=78; g[198]=255; b[198]=0;
r[199]=82; g[199]=255; b[199]=0; r[200]=87; g[200]=255; b[200]=0; r[201]=91;g[201]=255; b[201]=0; r[202]=95; g[202]=255; b[202]=0; r[203]=99; g[203]=255;
b[203]=0; r[204]=104; g[204]=255; b[204]=0; r[205]=108; g[205]=255; b[205]=0;r[206]=112; g[206]=255; b[206]=0; r[207]=116; g[207]=255; b[207]=0; r[208]=121;
g[208]=255; b[208]=0; r[209]=125; g[209]=255; b[209]=0; r[210]=129; g[210]=255;b[210]=0; r[211]=133; g[211]=255; b[211]=0; r[212]=138; g[212]=255; b[212]=0;
r[213]=142; g[213]=255; b[213]=0; r[214]=146; g[214]=255; b[214]=0; r[215]=150;g[215]=255; b[215]=0; r[216]=155; g[216]=255; b[216]=0; r[217]=159; g[217]=255;
b[217]=0; r[218]=163; g[218]=255; b[218]=0; r[219]=167; g[219]=255; b[219]=0;r[220]=172; g[220]=255; b[220]=0; r[221]=176; g[221]=255; b[221]=0; r[222]=180;
g[222]=255; b[222]=0; r[223]=184; g[223]=255; b[223]=0; r[224]=189; g[224]=255;b[224]=0; r[225]=193; g[225]=255; b[225]=0; r[226]=197; g[226]=255; b[226]=0;
r[227]=201; g[227]=255; b[227]=0; r[228]=206; g[228]=255; b[228]=0; r[229]=210;g[229]=255; b[229]=0; r[230]=214; g[230]=255; b[230]=0; r[231]=218; g[231]=255;
b[231]=0; r[232]=223; g[232]=255; b[232]=0; r[233]=227; g[233]=255; b[233]=0;r[234]=231; g[234]=255; b[234]=0; r[235]=235; g[235]=255; b[235]=0; r[236]=240;
g[236]=255; b[236]=0; r[237]=244; g[237]=255; b[237]=0; r[238]=248; g[238]=255;b[238]=0; r[239]=252; g[239]=255; b[239]=0; r[240]=255; g[240]=252; b[240]=0;
r[241]=255; g[241]=248; b[241]=0; r[242]=255; g[242]=244; b[242]=0; r[243]=255;g[243]=240; b[243]=0; r[244]=255; g[244]=235; b[244]=0; r[245]=255; g[245]=231;
b[245]=0; r[246]=255; g[246]=227; b[246]=0; r[247]=255; g[247]=223; b[247]=0;r[248]=255; g[248]=218; b[248]=0; r[249]=255; g[249]=214; b[249]=0; r[250]=255;
g[250]=210; b[250]=0; r[251]=255; g[251]=206; b[251]=0; r[252]=255; g[252]=201;b[252]=0; r[253]=255; g[253]=197; b[253]=0; r[254]=255; g[254]=193; b[254]=0;
r[255]=255; g[255]=189; b[255]=0; r[256]=255; g[256]=184; b[256]=0; r[257]=255;g[257]=180; b[257]=0; r[258]=255; g[258]=176; b[258]=0; r[259]=255; g[259]=172;
b[259]=0; r[260]=255; g[260]=167; b[260]=0; r[261]=255; g[261]=163; b[261]=0;r[262]=255; g[262]=159; b[262]=0; r[263]=255; g[263]=155; b[263]=0; r[264]=255;
g[264]=150; b[264]=0; r[265]=255; g[265]=146; b[265]=0; r[266]=255; g[266]=142;b[266]=0; r[267]=255; g[267]=138; b[267]=0; r[268]=255; g[268]=133; b[268]=0;
r[269]=255; g[269]=129; b[269]=0; r[270]=255; g[270]=125; b[270]=0; r[271]=255;g[271]=121; b[271]=0; r[272]=255; g[272]=116; b[272]=0; r[273]=255; g[273]=112;
b[273]=0; r[274]=255; g[274]=108; b[274]=0; r[275]=255; g[275]=104; b[275]=0;r[276]=255; g[276]=99; b[276]=0; r[277]=255; g[277]=95; b[277]=0; r[278]=255;
g[278]=91; b[278]=0; r[279]=255; g[279]=87; b[279]=0; r[280]=255; g[280]=82;b[280]=0; r[281]=255; g[281]=78; b[281]=0; r[282]=255; g[282]=74; b[282]=0;
r[283]=255; g[283]=70; b[283]=0; r[284]=255; g[284]=65; b[284]=0; r[285]=255;g[285]=61; b[285]=0; r[286]=255; g[286]=57; b[286]=0; r[287]=255; g[287]=53;
b[287]=0; r[288]=255; g[288]=48; b[288]=0; r[289]=255; g[289]=44; b[289]=0;r[290]=255; g[290]=40; b[290]=0; r[291]=255; g[291]=36; b[291]=0; r[292]=255;
g[292]=31; b[292]=0; r[293]=255; g[293]=27; b[293]=0; r[294]=255; g[294]=23;b[294]=0; r[295]=255; g[295]=19; b[295]=0; r[296]=255; g[296]=14; b[296]=0;
r[297]=255; g[297]=10; b[297]=0; r[298]=255; g[298]=6; b[298]=0; r[299]=255;
g[299]=2; b[299]=0;

}
}else if(palete.contains(";")){
   // r,g,b;r,g,b;r,g,b..> numero de control ponts
    QStringList cpoints, pointscolor;
    cpoints=palete.split(";");
    PLFLT *pos,*rpos,*gpos, *bpos;

    pos=(PLFLT*)malloc((cpoints.count()-1)*sizeof(PLFLT));
    rpos=(PLFLT*)malloc((cpoints.count()-1)*sizeof(PLFLT));
    gpos=(PLFLT*)malloc((cpoints.count()-1)*sizeof(PLFLT));
    bpos=(PLFLT*)malloc((cpoints.count()-1)*sizeof(PLFLT));

    for(int i=0; i<cpoints.count()-1; i++) //a string deve acabar em ; e ignora-se o Ãºltimo
    {
        pos[i]=i*1./(cpoints.count()-2);
        pointscolor=cpoints[i].split(",");
        if(pointscolor.count()!=3){
         free((void*)pos);free((void*)rpos);free((void*)gpos); free((void*)bpos);
         //errorstring="error in the color string";
         return 1;
        }
        rpos[i]=pointscolor[0].toDouble();
        gpos[i]=pointscolor[1].toDouble();
        bpos[i]=pointscolor[2].toDouble();

    }
    pls->scmap1n (n);
    pls->scmap1l(true,cpoints.count()-1,pos,rpos,gpos,bpos,NULL);
    free((void*)pos);free((void*)rpos);free((void*)gpos); free((void*)bpos);
}


//endofif(colorscheme)

 if(!palete.contains(";")){

if(palete.contains("rainbow_cloud")){
    pls->scmap1(r+30,g+30,b+30,n-30);//coisasdopaulo break
}else{
pls->scmap1(r,g,b,n);
}



free((void*)r);
free((void*)g);
free((void*)b);

 }
return 0;

}
